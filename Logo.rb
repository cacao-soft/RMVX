#=============================================================================
#  [RGSS2] オープニングロゴ - v2.0.0
# ---------------------------------------------------------------------------
#  Copyright (c) 2021 CACAO
#  Released under the MIT License.
#  https://opensource.org/licenses/mit-license.php
# ---------------------------------------------------------------------------
#  [Twitter] https://twitter.com/cacao_soft/
#  [GitHub]  https://github.com/cacao-soft/
#=============================================================================

=begin

 -- 概    要 ----------------------------------------------------------------

  ゲーム開始時にロゴを表示します。

 -- 注意事項 ----------------------------------------------------------------

  ※ デフォルトの設定では、テストプレイ時にロゴが表示されません。

 -- 使用方法 ----------------------------------------------------------------

  ★ ロゴ画像
   "Graphics/Pictures" に "Logo" という名前で保存してください。

  ★ トランジション画像
   トランジションを使用する場合は、Graphics フォルダ内に新しく
   Transitions フォルダを作成してください。
   そのフォルダに使用するトランジション画像を保存して
   下記の"IMG_TRANS"にファイル名を設定してください。

=end


#==============================================================================
# ◆ 設定項目
#==============================================================================
module OpeningLogo
  #--------------------------------------------------------------------------
  # ◇ ロゴ表示設定
  #--------------------------------------------------------------------------
  FRAMES = [
    # picture, frame, fadein, frame, fadeout, frame, sound, volume, pitch
    ["tkool", 40, "fadein", 40, "fadeout", 40],
    ["logo", 40, "", 40, nil, 0, "Saint6"],
  ]
  #--------------------------------------------------------------------------
  # ◇ トランジション画像の保存フォルダ
  #     0 : ピクチャフォルダ        (Graphics/Pictures)
  #     1 : トランジションフォルダ  (Graphics/Transitions)
  #--------------------------------------------------------------------------
  DIR_TRANSITION = 0
  #--------------------------------------------------------------------------
  # ◇ ロゴ間のウェイト
  #--------------------------------------------------------------------------
  WAIT = 10
  #--------------------------------------------------------------------------
  # ◇ テストプレイ時のロゴ表示の有無
  #--------------------------------------------------------------------------
  TEST_LOGO = false
  #--------------------------------------------------------------------------
  # ◇ ソフトリセット時のロゴ表示の有無
  #--------------------------------------------------------------------------
  RESET_LOGO = false


#/////////////////////////////////////////////////////////////////////////////#
#                                                                             #
#                下記のスクリプトを変更する必要はありません。                 #
#                                                                             #
#/////////////////////////////////////////////////////////////////////////////#


  #--------------------------------------------------------------------------
  # ● ロゴ表示
  #--------------------------------------------------------------------------
  def self.show
    return if $TEST && !TEST_LOGO             # テストプレイ
    return if $BTEST                          # 戦闘テスト
    return if $! && !RESET_LOGO               # ソフトリセット
    FRAMES.each {|logo| show_logo(*logo) }    # 各ロゴの表示
  rescue Errno::ENOENT
    filename = $!.message.sub("No such file or directory - ", "")
    print("ファイル #{filename} が見つかりません。")
  end
  #--------------------------------------------------------------------------
  # ● ロゴ表示
  #     pf  : ロゴピクチャのファイル名
  #     pt  : ロゴピクチャの表示時間
  #     fif : フェードイン時のトランジション画像のファイル名
  #     fit : フェードインに掛ける時間
  #     fof : フェードアウト時のトランジション画像のファイル名
  #     fot : フェードアウトに掛ける時間
  #     sf  : フェードイン時に演奏する効果音のファイル名
  #     sv  : 効果音の音量 (80)
  #     sp  : 効果音のピッチ (100)
  #--------------------------------------------------------------------------
  def self.show_logo(pf, pt, fif, fit, fof, fot, sf = "", sv = 80, sp = 100)
    dir = "Graphics/#{(DIR_TRANSITION == 0) ? "Pictures" : "Transitions"}/"
    fadein = (fif.empty? ? [fit] : [fit, dir + fif])
    fadeout = (fof ? (fof.empty? ? [fot] : [fot, dir + fof]) : nil)
    # ロゴ表示
    Graphics.freeze
    logo_sprite = Sprite.new
    logo_sprite.bitmap = Bitmap.new("Graphics/Pictures/#{pf}")
    logo_sprite.x = (Graphics.width - logo_sprite.bitmap.width) / 2
    logo_sprite.y = (Graphics.height - logo_sprite.bitmap.height) / 2
    # フェードイン
    Audio.se_play("Audio/SE/#{sf}", sv, sp) unless sf.empty?
    Graphics.transition(*fadein)
    Graphics.wait(pt)
    # フェードアウト
    Graphics.freeze
    logo_sprite.bitmap.dispose
    logo_sprite.dispose
    Graphics.transition(*fadeout) if fadeout
    Audio.se_stop
    Graphics.wait(WAIT)
  end
end

OpeningLogo.show
